library(swirl)
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran, package)
by_package
summarize(mean(size))
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts<-filter(pack_sum, count>679)
top_counts
view(top_counts)
View(top_counts)
top_counts_sorted<-arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique, desc(unique)
)
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res<-gather(students2, sex_class, count)
res<-gather(students2, sex_class, count, -grade)
res
?separate
separate(res, col=sex_class, into=c("sex","class"))
View(students2)
View(students2)
submit()
students3
submit()
?spread
submit()
library(readr)
parse_number("class5")
submit()
submit()
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
passed<-mutate(passed, status="passed")
failed<-mutate(failed, status="failed")
bind_rows(passed, failed)
sat
submit()
submit()
submit()
quit
quit()
library()
ls()
swirl()
library(swirl)
swirl()
Sys.getlocale()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day<-today()
this_day
year(this_day)
wday(this_date)
wday(this_day)
wday(this_day, label=TRUE)
this_moment<-now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
dmy("192012")
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment<-update(this_moment, hours=10, minutes=12)
this_moment
?now
nyc<-now(tzone="America/New York")
nyc<-now(tzone="America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<-update(depart, hours=17, minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,tzone="Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008")
last_time<-mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long<-interval(last_time,arrive)
as.period(how_long)
stopwatch()
search()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
library(ggplot2)
install.packages(ggplot2)
library(swirl)
swirl()
install.packages("ggplot2")
swirl()
head(pollution)
dim(pollution)
summary(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm,col="green",break=100)
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12)
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
table(pollution$region)
reg<-table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pollution, pm25~region,col="red")
boxplot(data=pollution, pm25~region,col="red")
boxplot(pm25~region,data=pollution,col="red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east<-subset(pollution,region=="east")
head(east)
hist(east$pm25,col="green")
hist(subset(pollution$pm25,region=="west"),col="green")
hist(subset(pollution$pm25,pollution$region=="west"),col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
plot(pollution,latitude,pm25)
with(pollution,plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$pm25,col=pollution$region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=(5,4,2,1))
par(mfrow=c(1,2),mar=c(5,4,2,1))
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
?Devices
plot(faithful, eruptions, waiting)
with(faithful,plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
setwd("~/github/GettingCleaningData")
pdf(file="myplot.pdf")
with(faithful,plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
tale(state$region)
table(state$region)
xyplot(Life.Exp ~ Income | region, data=sate, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
gplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)", col.axis="blue", col.lab="red", main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may<-subset(airquality, Month=5)
may<-subset(airquality, Month==5)
points(may$Wind, may$Ozone, pch=2, col="blue")
points(may$Wind, may$Ozone, pch=17, col="blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay(airquality,Month!=5)
notmay<-subset(airquality,Month!=5)
points(notmay$wind, notmay$Ozone, col="red", pch=8)
play()
head(notmay)
dim(notmay)
nxt()
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", c("blue","red"), c("May","Other Months"))
points(notmay$Wind, notmay$Ozone, pch=c(17,8), col=c("blue","red"), legend=c("May","Other Months"))
legend("topright", pch=c(17,8), col=c("blue","red"), legend=c("May","Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
rm(list=ls())
library(sqldf)
install.packages(sqldf)
install.packages("sqldf")
setwd("~/github/ExData_Plotting1")
source("plot1.R")
source("plot1.R")
View(power)
source("plot1.R")
source("plot1.R")
source("plot1.R")
str(power)
source("plot1.R")
str(power)
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot1.R")
View(power)
str(power)
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot1.R")
power$Date <- as.Date(power$Date, format="%d/%m/%Y")
str(power)
power$Date <- as.Date(power$Date, format="%d/%m/%Y")
source("plot1.R")
str(power)
View(power)
power$Time<-strptime(power$Time, format="%H:%M:%S")
str(power)
View(power)
source("plot1.R")
source("plot1.R")
View(power)
source("plot1.R")
View(power)
source("plot1.R")
str(power)
source("plot1.R")
hist(power$Global_active_power)
hist(power$Global_active_power, col="red")
dev.off()
hist(power$Global_active_power, col="red")
hist(power$Global_active_power, col="red", xlab="Global Active Power (kilowatts)")
hist(power$Global_active_power, col="red", xlab="Global Active Power (kilowatts)", main="Global Active Power")
source("plot1.R")
source("plot1.R")
source("plot1.R")
dev.off
dev.off()
source("plot1.R")
